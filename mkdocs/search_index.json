{
    "docs": [
        {
            "location": "/", 
            "text": "RememberThis\n\n\nRememberThis is a session based remember list for MODX Revolution. It displays the session based list and shows a link to add elements to the list.\n\n\nRequirements\n\n\n\n\nMODX Revolution 2.2.4+\n\n\nPHP v5.3+\n\n\n\n\nFeatures\n\n\n\n\nSmall session based remembering snippet solution. \n\n\nDisplay the session based list and show a link to add elements to the list.\n\n\nThe data added to the list could be retreived from MODX resources or from xPDO packages.\n\n\nAdding and removing elements from the list could be made by url params or by AJAX.\n\n\njQuery AJAX script with extendable callbacks.\n\n\n\n\n\n\n\n\n  var _paq = _paq || [];\n  _paq.push(['trackPageView']);\n  _paq.push(['enableLinkTracking']);\n  (function() {\n    var u=\"//piwik.partout.info/\";\n    _paq.push(['setTrackerUrl', u+'piwik.php']);\n    _paq.push(['setSiteId', 19]);\n    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];\n    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);\n  })();", 
            "title": "Home"
        }, 
        {
            "location": "/#rememberthis", 
            "text": "RememberThis is a session based remember list for MODX Revolution. It displays the session based list and shows a link to add elements to the list.  Requirements   MODX Revolution 2.2.4+  PHP v5.3+   Features   Small session based remembering snippet solution.   Display the session based list and show a link to add elements to the list.  The data added to the list could be retreived from MODX resources or from xPDO packages.  Adding and removing elements from the list could be made by url params or by AJAX.  jQuery AJAX script with extendable callbacks.    \n  var _paq = _paq || [];\n  _paq.push(['trackPageView']);\n  _paq.push(['enableLinkTracking']);\n  (function() {\n    var u=\"//piwik.partout.info/\";\n    _paq.push(['setTrackerUrl', u+'piwik.php']);\n    _paq.push(['setSiteId', 19]);\n    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];\n    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);\n  })();", 
            "title": "RememberThis"
        }, 
        {
            "location": "/installation/", 
            "text": "Install from MODX Extras\n\n\nSearch for RememberThis in the Package Manager of a MODX installation and install it in there.\n\n\nManual installation\n\n\nIf you can't access the MODX Extras Repository in your MODX installation, you can manually install RememberThis.\n\n\n\n\nDownload the transport package from \nMODX Extras\n\n  (or one of the pre built transport packages in \n_packages\n)\n\n\nUpload the zip file to your MODX installation's \ncore/packages\n folder.\n\n\nIn the MODX Manager, navigate to the Package Manager page, and select 'Search locally for packages' from the dropdown \n  button.\n\n\nRememberThis should now show up in the list of available packages. Click the corresponding 'Install' button and follow \n  instructions to complete the installation.\n\n\n\n\nBuild it from source\n\n\nTo build and install the package from source you could use \nGit Package Management\n. \nThe GitHub repository of RememberThis contains a \nconfig.json\n \nto build that package locally. Use this option, if you want to debug RememberThis and/or contribute bugfixes and enhancements.\n\n\n\n\n\n\n  var _paq = _paq || [];\n  _paq.push(['trackPageView']);\n  _paq.push(['enableLinkTracking']);\n  (function() {\n    var u=\"//piwik.partout.info/\";\n    _paq.push(['setTrackerUrl', u+'piwik.php']);\n    _paq.push(['setSiteId', 19]);\n    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];\n    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);\n  })();", 
            "title": "Installation"
        }, 
        {
            "location": "/installation/#install-from-modx-extras", 
            "text": "Search for RememberThis in the Package Manager of a MODX installation and install it in there.", 
            "title": "Install from MODX Extras"
        }, 
        {
            "location": "/installation/#manual-installation", 
            "text": "If you can't access the MODX Extras Repository in your MODX installation, you can manually install RememberThis.   Download the transport package from  MODX Extras \n  (or one of the pre built transport packages in  _packages )  Upload the zip file to your MODX installation's  core/packages  folder.  In the MODX Manager, navigate to the Package Manager page, and select 'Search locally for packages' from the dropdown \n  button.  RememberThis should now show up in the list of available packages. Click the corresponding 'Install' button and follow \n  instructions to complete the installation.", 
            "title": "Manual installation"
        }, 
        {
            "location": "/installation/#build-it-from-source", 
            "text": "To build and install the package from source you could use  Git Package Management . \nThe GitHub repository of RememberThis contains a  config.json  \nto build that package locally. Use this option, if you want to debug RememberThis and/or contribute bugfixes and enhancements.   \n  var _paq = _paq || [];\n  _paq.push(['trackPageView']);\n  _paq.push(['enableLinkTracking']);\n  (function() {\n    var u=\"//piwik.partout.info/\";\n    _paq.push(['setTrackerUrl', u+'piwik.php']);\n    _paq.push(['setSiteId', 19]);\n    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];\n    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);\n  })();", 
            "title": "Build it from source"
        }, 
        {
            "location": "/usage/", 
            "text": "Usage\n\n\nThe package contains two snippets and a formit hook, that use the following parameters\n1\n\n\nRememberThisAdd\n\n\nThis snippet will display an add button.\n\n\n\n\n\n\n\n\nProperty\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\naddTpl\n\n\nTemplate for the add link.\n\n\ntplRememberThisAdd\n\n\n\n\n\n\naddId\n\n\nThis value (and the correspondenting item title) is added to the list.\n\n\nCurrent resource id\n\n\n\n\n\n\n\n\nRememberThisList\n\n\nThis snippet will display the remembered list.\n\n\n\n\n\n\n\n\nProperty\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nrowTpl\n\n\nRow template for the list output.\n\n\ntplRememberThisRow\n\n\n\n\n\n\nouterTpl\n\n\nOuter template for the list output, if the list is not empty.\n\n\ntplRememberThisOuter\n\n\n\n\n\n\nnoResultsTpl\n\n\nTemplate that is displayed, if the list is empty.\n\n\ntplRememberThisNoResults\n\n\n\n\n\n\njsonList\n\n\nOutput a JSON encoded list of element \nkeyname\n values.\n\n\nno\n\n\n\n\n\n\n\n\nRememberThisHook (FormIt hook)\n\n\nThe Formit placeholder rememberthis i.e. \n[[+fi.rememberthis]]\n will be filled with the content of the list. You have to call the hook like this: \n\n\n[[!FormIt?\n\nhooks=`...,RememberThisHook,...`\n\nrememberOuterTpl=`tplRememberOuterMail`\n\nrememberRowTpl=`tplRememberRowMail`\n]]\n\n\n\n\n\n\n\n\n\n\nProperty\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nrememberRowTpl\n\n\nRow template for the list output.\n\n\ntplRememberThisRow\n\n\n\n\n\n\nrememberOuterTpl\n\n\nOuter template for the list output, if the list is not empty.\n\n\ntplRememberThisOuter\n\n\n\n\n\n\njsonList\n\n\nFill the formit placeholder \nrememberthis\n with a JSON encoded list of element key/values pairs.\n\n\nno\n\n\n\n\n\n\nclearList\n\n\nClear the list after running the hook.\n\n\nno\n\n\n\n\n\n\n\n\nSystem Settings\n\n\nAll the system settings are prefixed by \nrememberthis.\n and are located in the rememberthis namespace.\n\n\n\n\n\n\n\n\nProperty\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nrowTpl\n\n\nRow template for the list output.\n\n\ntplRememberThisRow\n\n\n\n\n\n\nouterTpl\n\n\nOuter template for the list output, if the list is not empty.\n\n\ntplRememberThisOuter\n\n\n\n\n\n\naddTpl\n\n\nTemplate for the add link.\n\n\ntplRememberThisAdd\n\n\n\n\n\n\nnoResultsTpl\n\n\nTemplate that is displayed, if the list is empty.\n\n\ntplRememberThisNoResults\n\n\n\n\n\n\nscriptTpl\n\n\nTemplate for the javascript call.\n\n\ntplRememberThisScript\n\n\n\n\n\n\nshowZeroCount\n\n\nShow Zero Values in template.\n\n\nyes\n\n\n\n\n\n\nitemTitleTpl\n\n\nTemplate for one list item.\n\n\ntplRememberThisItemTitle\n\n\n\n\n\n\najaxLoaderImg\n\n\nImage file, that is shown during AJAX requests.\n\n\nFontAwesome fa-refresh\n\n\n\n\n\n\ntvPrefix\n\n\nPrefix for template variables in template chunks.\n\n\ntv.\n\n\n\n\n\n\naddQuery\n\n\nQuery key, used to add elements to the list.\n\n\nadd\n\n\n\n\n\n\ndeleteQuery\n\n\nQuery key, used to remove elements from the list.\n\n\ndelete\n\n\n\n\n\n\nlanguage\n\n\nSnippet language.\n\n\ncurrent \ncultureKey\n\n\n\n\n\n\ntplPath\n\n\nBase path for template chunks using @FILE binding.\n\n\n{assets_path}elements/chunks/\n\n\n\n\n\n\npackagename\n\n\nxPDO package name where the added data is retreived from. If empty, the data is retrieved from resources. The data row is selected by the id column of the package or modResource.\n\n\n-\n\n\n\n\n\n\nclassname\n\n\nxPDO class name where the added data is retreived from.\n\n\n-\n\n\n\n\n\n\njoins\n\n\nJoins defined in the xPDO class, to retreive the added data.\n\n\n-\n\n\n\n\n\n\njQueryPath\n\n\nPath to jQuery script.\n\n\n-\n\n\n\n\n\n\nincludeScripts\n\n\nInclude javascripts (at the end of the body).\n\n\nyes\n\n\n\n\n\n\nincludeCss\n\n\nInclude css (at the end of the head).\n\n\nyes\n\n\n\n\n\n\ndebug\n\n\nDisplay debug informations.\n\n\nno\n\n\n\n\n\n\n\n\nThe following templating system settings could be overridden in the snippet calls:\n\nrowTpl\n, \nouterTpl\n, \naddTpl\n, \nnoResultsTpl\n\n\nIn template chunks all resource fields of the MODX resources could be used as placeholder including template variables with the prefix 'tv.' could be used. \n\n\nIf a xPDO package is used, all fields of this package could be used as placeholder.\n\n\n\n\n\n\n  var _paq = _paq || [];\n  _paq.push(['trackPageView']);\n  _paq.push(['enableLinkTracking']);\n  (function() {\n    var u=\"//piwik.partout.info/\";\n    _paq.push(['setTrackerUrl', u+'piwik.php']);\n    _paq.push(['setSiteId', 19]);\n    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];\n    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);\n  })();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMost of the snippet templating settings should be made in the MODX system settings, since they are used by the snippets and with ajax.", 
            "title": "Usage"
        }, 
        {
            "location": "/usage/#usage", 
            "text": "The package contains two snippets and a formit hook, that use the following parameters 1  RememberThisAdd  This snippet will display an add button.     Property  Description  Default      addTpl  Template for the add link.  tplRememberThisAdd    addId  This value (and the correspondenting item title) is added to the list.  Current resource id     RememberThisList  This snippet will display the remembered list.     Property  Description  Default      rowTpl  Row template for the list output.  tplRememberThisRow    outerTpl  Outer template for the list output, if the list is not empty.  tplRememberThisOuter    noResultsTpl  Template that is displayed, if the list is empty.  tplRememberThisNoResults    jsonList  Output a JSON encoded list of element  keyname  values.  no     RememberThisHook (FormIt hook)  The Formit placeholder rememberthis i.e.  [[+fi.rememberthis]]  will be filled with the content of the list. You have to call the hook like this:   [[!FormIt? hooks=`...,RememberThisHook,...` rememberOuterTpl=`tplRememberOuterMail` rememberRowTpl=`tplRememberRowMail`\n]]     Property  Description  Default      rememberRowTpl  Row template for the list output.  tplRememberThisRow    rememberOuterTpl  Outer template for the list output, if the list is not empty.  tplRememberThisOuter    jsonList  Fill the formit placeholder  rememberthis  with a JSON encoded list of element key/values pairs.  no    clearList  Clear the list after running the hook.  no     System Settings  All the system settings are prefixed by  rememberthis.  and are located in the rememberthis namespace.     Property  Description  Default      rowTpl  Row template for the list output.  tplRememberThisRow    outerTpl  Outer template for the list output, if the list is not empty.  tplRememberThisOuter    addTpl  Template for the add link.  tplRememberThisAdd    noResultsTpl  Template that is displayed, if the list is empty.  tplRememberThisNoResults    scriptTpl  Template for the javascript call.  tplRememberThisScript    showZeroCount  Show Zero Values in template.  yes    itemTitleTpl  Template for one list item.  tplRememberThisItemTitle    ajaxLoaderImg  Image file, that is shown during AJAX requests.  FontAwesome fa-refresh    tvPrefix  Prefix for template variables in template chunks.  tv.    addQuery  Query key, used to add elements to the list.  add    deleteQuery  Query key, used to remove elements from the list.  delete    language  Snippet language.  current  cultureKey    tplPath  Base path for template chunks using @FILE binding.  {assets_path}elements/chunks/    packagename  xPDO package name where the added data is retreived from. If empty, the data is retrieved from resources. The data row is selected by the id column of the package or modResource.  -    classname  xPDO class name where the added data is retreived from.  -    joins  Joins defined in the xPDO class, to retreive the added data.  -    jQueryPath  Path to jQuery script.  -    includeScripts  Include javascripts (at the end of the body).  yes    includeCss  Include css (at the end of the head).  yes    debug  Display debug informations.  no     The following templating system settings could be overridden in the snippet calls: rowTpl ,  outerTpl ,  addTpl ,  noResultsTpl  In template chunks all resource fields of the MODX resources could be used as placeholder including template variables with the prefix 'tv.' could be used.   If a xPDO package is used, all fields of this package could be used as placeholder.   \n  var _paq = _paq || [];\n  _paq.push(['trackPageView']);\n  _paq.push(['enableLinkTracking']);\n  (function() {\n    var u=\"//piwik.partout.info/\";\n    _paq.push(['setTrackerUrl', u+'piwik.php']);\n    _paq.push(['setSiteId', 19]);\n    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];\n    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);\n  })();        Most of the snippet templating settings should be made in the MODX system settings, since they are used by the snippets and with ajax.", 
            "title": "Usage"
        }
    ]
}