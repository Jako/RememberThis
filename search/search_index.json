{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"RememberThis","text":"<p>RememberThis is a session based remember list for MODX Revolution. It displays the session based list and shows a link to add elements to the list.</p>"},{"location":"#requirements","title":"Requirements","text":"<ul> <li>MODX Revolution 2.6+</li> <li>PHP 7.2+</li> </ul>"},{"location":"#features","title":"Features","text":"<ul> <li>Small session based remembering snippet solution. </li> <li>Display the session based list and show a link to add elements to the list.</li> <li>The data added to the list could be retreived from MODX resources or from xPDO packages.</li> <li>Adding and removing elements from the list could be made by url params or by AJAX.</li> <li>jQuery AJAX script with extendable callbacks.</li> <li>FormIt hooks to mail the remembered list.</li> </ul>"},{"location":"#license","title":"License","text":"<p>The project is licensed under the GPLv2 license.</p>"},{"location":"#translations","title":"Translations","text":"<p>Translations of the package can be made for the Default Lexicon, the Properties Lexicon and the System Setting Lexicon</p>"},{"location":"contributors/","title":"Contributors","text":"<p>The RememberThis project was started in 2008 by Thomas Jakobi as a snippet for MODX Evolution. The MODX Revolution Extra package was started in 2011.</p> <p>Many thanks to all who contributed, whether by creating pull requests, submitting bug reports, or donating.</p>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#install-from-modx-extras","title":"Install from MODX Extras","text":"<p>Search for RememberThis in the Package Manager of a MODX installation and install it in there.</p>"},{"location":"installation/#manual-installation","title":"Manual installation","text":"<p>If you can't access the MODX Extras Repository in your MODX installation, you can manually install RememberThis.</p> <ul> <li>Download the transport package from MODX Extras (or one of the pre-built transport packages in _packages)</li> <li>Upload the zip file to your MODX installation's <code>core/packages</code> folder or upload it manually in the MODX Package Manager.</li> <li>In the MODX Manager, navigate to the Package Manager page, and select 'Search locally for packages' from the dropdown button.</li> <li>RememberThis should now show up in the list of available packages. Click the corresponding 'Install' button and follow the instructions to complete the installation.</li> </ul>"},{"location":"installation/#build-it-from-source","title":"Build it from source","text":"<p>To build and install the package from source you could use Git Package Management. The GitHub repository of RememberThis contains a config.json to build that package locally. Use this option, if you want to debug RememberThis and/or contribute bugfixes and enhancements.</p>"},{"location":"usage/","title":"Usage","text":"<p>The package contains two snippets and a formit hook, that use the following  parameters<sup>1</sup></p>"},{"location":"usage/#rememberthisadd","title":"RememberThisAdd","text":"<p>This snippet will display an add button. It has the following properties:</p> Property Description Default addId This value (and the correspondenting item title) is added to the list.<sup>2</sup> Current resource id addTpl Template for the add link. (system setting) tplPath Base path for template chunks using @FILE binding. (system setting) <p>The Add template can contain a link or a form to add xPDO objects as an element to the list. The form can contain form fields and the link can contain parameters to set properties of the remembered element. The field names and url parameters must be prefixed with <code>[[+rememberqueryadd]]property_</code>.</p>"},{"location":"usage/#placeholders","title":"Placeholders","text":"<p>The following placeholders are available in the addTpl template chunk:</p> Placeholder Description rememberurl Link to add an xPDO object as element to the list. rememberid The identifier to reference the added element. rememberqueryadd The query parameter to add an element to the list<sup>3</sup>."},{"location":"usage/#rememberthislist","title":"RememberThisList","text":"<p>This snippet will display the remembered list. It has the following properties:</p> Property Description Default jsonList Output a JSON-encoded array of associative arrays of element identifiers<sup>4</sup> and element itemproperties. 0 (No) noResultsTpl Template that is displayed, if the list is empty. (system setting) outerTpl Outer template for the output of the list, if the list is not empty. (system setting) rowTpl Row template for the output of a list element. (system setting) tplPath Base path for template chunks using @FILE binding. (system setting) wrapperTpl Wrapper template for the outer output or the empty output. (system setting) <p>The snippet tries to display a list from the database if the query parameter <code>rememberthis</code> is not empty.</p>"},{"location":"usage/#placeholders_1","title":"Placeholders","text":"<p>The following placeholders are available in the rowTpl template chunk:</p> Placeholder Description identifier The identifier of the added element. properties The properties for the added element. itemtitle The title of the added element. This title is rendered with the chunk referenced by the <code>itemTitleTpl</code> system setting<sup>5</sup> deleteurl The url to delete this element from the list. deleteid The row ID to delete this element from the list. <p>The following placeholders are available in the outerTpl template chunk:</p> Placeholder Description count The count of added elements in the list. wrapper The wrapper containing all rows of the list."},{"location":"usage/#rememberthishook-formit-hook","title":"RememberThisHook (FormIt hook)","text":"<p>The FormIt hook sets some placeholders in FormIt. You have to call the hook like this: </p> <pre><code>[[!FormIt?\n&amp;hooks=`...,RememberThisHook,...`\n&amp;rememberOuterTpl=`tplRememberOuterMail`\n&amp;rememberRowTpl=`tplRememberRowMail`\n]]\n</code></pre> <p>The hook has the following properties:</p> Property Description Default rememberClearList Clear the list after running the hook. 0 (No) rememberJsonList Output a JSON-encoded array of associative arrays of element identifiers<sup>4</sup> and element itemproperties. 0 (No) rememberNoResultsTpl Template that is displayed, if the list is empty. (system setting) rememberOuterTpl Outer template for the output of the list, if the list is not empty. (system setting) rememberRowTpl Row template for the output of a list element. (system setting) rememberSaveList Save the remembered list with a hash in the database and fill a placeholder with this hash. 0 (No) rememberTplPath Base path for template chunks using @FILE binding. (system setting) rememberWrapperTpl Wrapper template for the outer output or the empty output. (system setting)"},{"location":"usage/#placeholders_2","title":"Placeholders","text":"<p>The following placeholders are available in the rowTpl template chunk:</p> Placeholder Description identifier The identifier<sup>4</sup> of the added element. properties The properties for the element. itemtitle The title of the added element. This title is rendered with the chunk referenced by the <code>itemTitleTpl</code> system setting<sup>5</sup> itemcount The value of an input field with the name <code>count_[[+rowid]]</code>, if the form is posted. rowid The row ID of the element."},{"location":"usage/#formit-placeholders","title":"FormIt Placeholders","text":"<p>The following FormIt placeholders (<code>[[!+fi. ...]]</code>)  are set by the hook:</p> Placeholder Description rememberthis The output of the rememberWrapperTpl template chunk (or the JSON encoded array of associative arrays of element identifiers<sup>4</sup> and element itemproperties in the remembered list, if jsonList property is enabled). rememberthis.list An array of associative arrays of element identifiers and element itemproperties in the remembered list. rememberthis.count The count of added elements in the list rememberthis.hash The hash of the saved list in the database. The RememberThisList snippet can be triggered by the request parameter <code>rememberthis</code> containing this hash. That way remembered lists can be mailed to other users."},{"location":"usage/#rememberthisclear-formit-hook","title":"RememberThisClear (FormIt hook)","text":"<p>The FormIt hook clears the list and can be used as one of the last entries in the FormIt hook list.</p>"},{"location":"usage/#system-settings","title":"System Settings","text":"<p>RememberThis uses the following system settings in the namespace <code>rememberthis</code>.</p> Key Name Description Default rememberthis.addTpl Add Template Template for the add link. tplRememberThisAdd rememberthis.ajaxLoaderImg AJAX Loader Image Image file, that is shown during AJAX requests. - rememberthis.classname Classname xPDO class name where the added data is retreived from. - rememberthis.cookieExpireDays Cookie Expiration The expiration time of the cookie (in days). 90 rememberthis.cookieName Cookie Name The name of the cookie. rememberlist rememberthis.debug Debug Display debug information. No rememberthis.fields Fields Comma separated list of field names of the xPDO class, that are remembered in the list. - rememberthis.includeCss Include CSS Include css (at the end of the head). Yes rememberthis.includeScripts Include Javascripts Include javascripts (at the end of the body). Yes rememberthis.itemTitleTpl Item Title Template Template for one list item. tplRememberThisItemTitle rememberthis.joins Joins Joins defined in the xPDO class, to retreive the added data. - rememberthis.jQueryPath Path to jQuery Path to jQuery script. - rememberthis.keyname Keyname xPDO class keyname to retrieve one data row. id rememberthis.language Language The frontend language. - rememberthis.noResultsTpl No Results Template Template that is displayed, if the list is empty. tplRememberThisNoResults rememberthis.outerTpl Outer Template Outer template for the output of the list, if the list is not empty. tplRememberThisOuter rememberthis.packagename Packagename xPDO package name from which the added data is retrieved. If empty, the data is retrieved from resources. - rememberthis.queryAdd Add Query Key Query key, that is used to add elements to the list. add rememberthis.queryDelete Delete Query Key Query key, that is used to remove elements from the list. delete rememberthis.rowTpl Row Template Row template for the output of a list element. tplRememberThisRow rememberthis.scriptTpl Script Template Template for the javascript call. tplRememberThisScript rememberthis.showZeroCount Show Zero Value Show Zero Values in template. Yes rememberthis.tplPath Templates Path Base path for template chunks using @FILE binding. {assets_path}elements/chunks/ rememberthis.tvPrefix Template Variable Prefix Prefix for template variables in template chunks. tv. rememberthis.useCookie Use Cookie Save the remembered data in a cookie. No rememberthis.useDatabase Use Database Save the remembered list in the database (only if the frontend user is logged into the site). No rememberthis.wrapperTpl Wrapper Template Wrapper template for the outer output or the empty output. tplRememberThisWrapper <p>Multiple snippet calls and debug output</p> <p>If you display the RememberThisList snippet call multiple on the page, all snippet calls have to be different, to show the debug information.</p> <p>The following templating system settings can be overridden by snippet  properties: rowTpl, outerTpl, addTpl, noResultsTpl</p> <p>In the rowTpl template chunk all resource fields can be used as  placeholder (template variables have to be prefixed using the prefix set in  tvPrefix), if no xPDO package/classname is used. If a xPDO  package/classname is used, all fields of the xPDO class can be used as  placeholder.</p> <ol> <li> <p>Most of the settings for the snippet templates should be done in the MODX system settings, as they are used by the snippets and with Ajax.\u00a0\u21a9</p> </li> <li> <p>If an xPDO object package and a classname are used, the object is referenced by the column with the system setting <code>keyname</code>.\u00a0\u21a9</p> </li> <li> <p>The placeholder rememberqueryadd is filled with the <code>addQuery</code> system setting.\u00a0\u21a9</p> </li> <li> <p>The identifier is set by the <code>keyname</code> system setting, if the xPDO object package and classname is used.\u00a0\u21a9\u21a9\u21a9\u21a9</p> </li> <li> <p>In the <code>itemTitleTpl</code> template chunk all column names of the xPDO object can be referenced by a placeholder with this name. Also, all properties can be referenced with the property name, i.e. a property set by <code>[[+rememberqueryadd]]property_test</code> can be referenced with the placeholder <code>[[+test]]</code>.\u00a0\u21a9\u21a9</p> </li> </ol>"}]}